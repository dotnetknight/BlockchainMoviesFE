{
	"compiler": {
		"version": "0.8.6+commit.11564f7e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "token",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"components": [
									{
										"internalType": "string",
										"name": "token",
										"type": "string"
									},
									{
										"internalType": "string[]",
										"name": "arrayElements",
										"type": "string[]"
									},
									{
										"internalType": "string",
										"name": "field1",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "field2",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "field3",
										"type": "string"
									},
									{
										"components": [
											{
												"internalType": "string",
												"name": "token",
												"type": "string"
											},
											{
												"internalType": "string",
												"name": "comment",
												"type": "string"
											}
										],
										"internalType": "struct TestContract.Array",
										"name": "array",
										"type": "tuple"
									}
								],
								"internalType": "struct TestContract.TestStructArgument",
								"name": "Argument",
								"type": "tuple"
							},
							{
								"internalType": "bool",
								"name": "isBlocked",
								"type": "bool"
							}
						],
						"internalType": "struct TestContract.TestStruct",
						"name": "testStructToAdd",
						"type": "tuple"
					}
				],
				"name": "addTestStruct",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTestStructLength",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTestStructs",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "token",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"components": [
									{
										"internalType": "string",
										"name": "token",
										"type": "string"
									},
									{
										"internalType": "string[]",
										"name": "arrayElements",
										"type": "string[]"
									},
									{
										"internalType": "string",
										"name": "field1",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "field2",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "field3",
										"type": "string"
									},
									{
										"components": [
											{
												"internalType": "string",
												"name": "token",
												"type": "string"
											},
											{
												"internalType": "string",
												"name": "comment",
												"type": "string"
											}
										],
										"internalType": "struct TestContract.Array",
										"name": "array",
										"type": "tuple"
									}
								],
								"internalType": "struct TestContract.TestStructArgument",
								"name": "Argument",
								"type": "tuple"
							},
							{
								"internalType": "bool",
								"name": "isBlocked",
								"type": "bool"
							}
						],
						"internalType": "struct TestContract.TestStruct[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts\\Test.sol": "TestContract"
		},
		"evmVersion": "berlin",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts\\Test.sol": {
			"keccak256": "0x931bd4ff71af1525250262b9948b8ad7b43cd6cef939569838a83ff7ffdd609f",
			"license": "MIT",
			"urls": [
				"bzz-raw://f863404f3728d6716beabb97b1df18cd254f922b621b5818ec17f43de80d1e47",
				"dweb:/ipfs/QmU24QNh39e1roi7C8J98GYbeLzeAK7SCUoTqrG88YnfHw"
			]
		}
	},
	"version": 1
}